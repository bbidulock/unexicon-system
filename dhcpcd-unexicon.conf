# A sample configuration for dhcpcd.
# See dhcpcd.conf(5) for details.

# Allow users of this group to interact with dhcpcd via the control socket.
controlgroup users

#fallback <profile>
#   fallback to using this profile if DHCP fails.  This allows
#   you to configure a static profile instead of using ZeroConf.

#nogateway
#   do not install any default routes

#noipv6rs
#   disable solicitation of IPv6 Router Advertisements

#destination <option>
#   if dhcpcd.conf detects an address added to a point to point
#   interface (PPP, TUN, etc) then it will set the listed DHCP
#   options to the destination address of the interface

#profile <name>
#   subsequent options are only parsed for this profile <name>.

#quiet
#   suppress any dhcpcd output to the console, except for errors.

#reboot 0
#reboot <seconds>
#   allow <reboot> seconds before moving to the discover phase if
#   we have an old lease to use.  The default is 5 seconds.  A
#   setting of 0 seconds causes dhcpcd to skip the reboot phase
#   and go straight into discover

release
#   dhcpcd will release the lease prior to stopping the interface.

#script <script>
#   use <script> instead of the default
#   /usr/lib/dhcpcd/dhcpcd-run-hooks.

#static <option>=<value>
#   configures a static value.  If you set ip_address then dhcpcd
#   will not attempt to obtain a lease and just use the value for
#   the address with an infinite lease time.
#
#   interface eth0
#   static ip_address=192.168.0.10/24
#   static routers=192.168.0.1
#   static domain_name_servers=192.168.0.1
#
#   interface ppp0
#   static ip_address=
#   destination routers

timeout 30
#timeout <seconds>
#   the default timeout for waiting for a DHCP respnse is 30
#   seconds which may be too long or too short and can be changed
#   here.

#userclass <string>
#   tag the DHCP messages with the userclass.  You can specify
#   more than one.

#vendor <code>,<value>
#   add an encapsulated vendor option.  See dhcpcd.conf(5) for
#   details.

#vendorclassid <string>
#   the default is dhcpcd-<version>:<os>:<machine>:<platform>.

waitip 4
#waitip
#   wait for an address to be assigned before forking to the
#   background

# Inform the DHCP server of our hostname for DDNS.
#hostname

# Use the hardware address of the interface for the Client ID.
#clientid
# or
# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.
# Some non-RFC compliant DHCP servers do not reply with this set.
# In this case, comment out duid and enable clientid above.
duid

# Persist interface configuration when dhcpcd exits.
persistent

#env force_hostname=yes
# always set the hostname
env hostname_fqdn=yes
# set fully qualified domain name

# Rapid commit support.
# Safe to enable by default because it requires the equivalent option set
# on the server to actually work.
option rapid_commit

# A list of options to request from the DHCP server.
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
# Most distributions have NTP support.
option ntp_servers
option time_offset
option time_servers
# Respect the network MTU. This is applied to DHCP routes.
option interface_mtu

# These are bunch more options that we should respect....
option subnet_mask
option broadcast_address
option ieee802_3_encapsulation
option mask_supplier
option ip_forwarding
option non_local_source_routing

option routers
option router_discovery
option static_routes

# These are pretty basic and we have to write our own scripts for binding to the
# NIS server if not already done so.
#
option nis_domain
option nis_servers
option nisplus_domain
option nisplus_servers


##
## options:
##
option subnet_mask
option classless_static_routes
# option ms_classless_static_routes
option static_routes
option routers
option time_offset
option time_servers
# option ien116_name_servers
option domain_name_servers
option log_servers
option cookie_servers
option lpr_servers
option impress_servers
option resource_location_servers
option host_name
# option boot_size
# option merit_dump
option domain_name
option swap_server
# option root_path
# option extensions_path
option ip_forwarding
option non_local_source_routing
# option policy_filter
# option max_dgram_reassembly
# option default_ip_ttl
# option path_mtu_aging_timeout
# option path_mtu_plateau_table
# option interface_mtu
option all_subnets_local
option broadcast_address
# option perform_mask_discovery
#@option mask_supplier
#@option router_discovery
# option router_solicitation_address
# option trailer_encapsulation
# option arp_cache_timeout
#@option ieee802_3_encapsulation
# option default_tcp_ttl
# option tcp_keepalive_interval
# option tcp_keepalive_garbage
option nis_domain
option nis_servers
#@option ntp_servers
# option vendor_encapsulated_options
option netbios_name_servers
option netbios_dd_server
option netbios_node_type
option netbios_scope
option font_servers
option x_display_manager
# option dhcp_requested_address
# option dhcp_lease_time
# option dhcp_option_overload
# option dhcp_message_type
# option dhcp_server_identifier
# option dhcp_parameter_request_list
# option dhcp_message
# option dhcp_max_message_size
# option dhcp_renewal_time
# option dhcp_rebinding_time
option nisplus_domain
option nisplus_servers
# option tftp_server_name
# option bootfile_name
option mobile_ip_home_agent
option smtp_server
option pop_server
option nntp_server
option www_server
option finger_server
option irc_server
option streettalk_server
option streettalk_directory_assistance_server
# option user_class
# option fqdn_name
option nds_servers
option nds_tree_name
option nds_context
# option bcms_controller_names
# option bcms_controller_address
# option client_last_transaction_time
# option associated_ip
option uap_servers
# option netinfo_server_address
# option netinfo_server_tag
# option default_url
# option subnet_selection
#@option domain_search
option sip_server
# option sixrd

# A ServerID is required by RFC2131.
require dhcp_server_identifier

# Generate Stable Private IPv6 Addresses instead of hardware based ones
slaac private

# A hook script is provided to lookup the hostname if not set by the DHCP
# server, but it should not be run by default.
nohook lookup-hostname
noipv4ll
